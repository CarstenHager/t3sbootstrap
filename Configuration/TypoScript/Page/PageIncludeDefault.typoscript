page {
	
	shortcutIcon = {$bootstrap.config.favicon}

	# SCSS & CSS files to be included
	includeCSS {

		# SCSS files
		bootstrapFour = EXT:t3sbootstrap/Resources/Public/Contrib/Bootstrap/scss/bootstrap.scss
		bootstrapFour.forceOnTop = 1
		bootstrapFour.if.isFalse = {$bootstrap.extconf.customScss}

		customBootstrap = uploads/tx_t3sbootstrap/bootstrap.scss
		customBootstrap.forceOnTop = 1
		customBootstrap.if.isTrue = {$bootstrap.extconf.customScss}

		t3sfontawesome = EXT:t3sbootstrap/Resources/Public/Contrib/Fontawesome/scss/fontawesome.scss
		t3sfontawesome.if {
			value = 1
			equals = {$bootstrap.extconf.fontawesomeCss}
		}
		
		t3sfontawesomePro = fileadmin/T3SB/FA5Pro/scss/fontawesome.scss
		t3sfontawesomePro.if {
			value = 2
			equals = {$bootstrap.extconf.fontawesomeCss}
		}

		t3sblightbox = EXT:t3sbootstrap/Resources/Public/Contrib/Lightbox/scss/baguetteBox.scss
		t3sblightbox.if {
			value = 1
			equals = {$bootstrap.config.lightboxSelection}
		}

		# CSS files
		t3sfontawesomelink = EXT:t3sbootstrap/Resources/Public/Contrib/Fontawesome/css/fontawesomeLink.css
		t3sfontawesomelink.if {
			value = 1
			equals = {$bootstrap.extconf.fontawesomeCss}
		}

		t3sfontawesomelinkPro = EXT:t3sbootstrap/Resources/Public/Contrib/Fontawesome/css/fontawesomeProLink.css
		t3sfontawesomelinkPro.if {
			value = 2
			equals = {$bootstrap.extconf.fontawesomeCss}
		}

		t3sfontawesomeMin = EXT:t3sbootstrap/Resources/Public/Contrib/Fontawesome/css/fontawesomeMin.css
		t3sfontawesomeMin.if.isFalse = {$bootstrap.extconf.fontawesomeCss}

		t3sbootstrap = EXT:t3sbootstrap/Resources/Public/Styles/t3sbootstrap.css

		stickyFooter = EXT:t3sbootstrap/Resources/Public/Styles/stickyFooter.css
		stickyFooter.if {
			isTrue.cObject = TEXT
			isTrue.cObject.data.dataWrap = DB:tx_t3sbootstrap_domain_model_config:{register:configuid}:footer_sticky
		}

		megaMenu = EXT:t3sbootstrap/Resources/Public/Styles/megaMenu.css
		megaMenu.if {
			isTrue.cObject = TEXT
			isTrue.cObject.data.dataWrap = DB:tx_t3sbootstrap_domain_model_config:{register:configuid}:navbar_megamenu
		}

		animatecss = EXT:t3sbootstrap/Resources/Public/Contrib/Animate/animate.min.css
		animatecss.if {
			value = 2
			equals = {$bootstrap.extconf.animateCss}
		}

		codesnippet = EXT:t3sbootstrap/Resources/Public/Contrib/Codesnippet/default.css
		codesnippet.if.isTrue = {$bootstrap.extconf.codesnippet}

		# Offcanvas Navbar - dependent on the breakpoint
		offcanvasNavbarSM = EXT:t3sbootstrap/Resources/Public/Styles/offcanvasNavbarSM.css
		offcanvasNavbarSM.if {
				value.data = register:breakpoint
				equals = sm
				isTrue.cObject = TEXT
				isTrue.cObject.data.dataWrap = DB:tx_t3sbootstrap_domain_model_config:{register:configuid}:navbar_offcanvas
		}
		offcanvasNavbarMD = EXT:t3sbootstrap/Resources/Public/Styles/offcanvasNavbarMD.css
		offcanvasNavbarMD.if {
				value.data = register:breakpoint
				equals = md
				isTrue.cObject = TEXT
				isTrue.cObject.data.dataWrap = DB:tx_t3sbootstrap_domain_model_config:{register:configuid}:navbar_offcanvas
		}
		offcanvasNavbarLG = EXT:t3sbootstrap/Resources/Public/Styles/offcanvasNavbarLG.css
		offcanvasNavbarLG.if {
				value.data = register:breakpoint
				equals = lg
				isTrue.cObject = TEXT
				isTrue.cObject.data.dataWrap = DB:tx_t3sbootstrap_domain_model_config:{register:configuid}:navbar_offcanvas
		}
		offcanvasNavbarXL = EXT:t3sbootstrap/Resources/Public/Styles/offcanvasNavbarXL.css
		offcanvasNavbarXL.if {
				value.data = register:breakpoint
				equals = xl
				isTrue.cObject = TEXT
				isTrue.cObject.data.dataWrap = DB:tx_t3sbootstrap_domain_model_config:{register:configuid}:navbar_offcanvas
		}
		offcanvasNavbarNO = EXT:t3sbootstrap/Resources/Public/Styles/offcanvasNavbarNO.css
		offcanvasNavbarNO.if {
				value.data = register:breakpoint
				equals = no
				isTrue.cObject = TEXT
				isTrue.cObject.data.dataWrap = DB:tx_t3sbootstrap_domain_model_config:{register:configuid}:navbar_offcanvas
		}

		hoverEffects = EXT:t3sbootstrap/Resources/Public/Styles/hoverEffects.css
		hoverEffects.if.isTrue = {$bootstrap.extconf.linkHoverEffect}

		cookieconsentCss = EXT:t3sbootstrap/Resources/Public/Contrib/Cookieconsent/cookieconsent.min.css
		cookieconsentCss.if.isTrue = {$bootstrap.extconf.cookieconsent}

	}

	# JS to be included
	includeJSFooterlibs {
		t3sbjquery = EXT:t3sbootstrap/Resources/Public/Contrib/jquery.min.js
		t3sbjquery.forceOnTop = 1

		t3sbpopper = EXT:t3sbootstrap/Resources/Public/Contrib/popper.min.js

		t3sbootstrap = EXT:t3sbootstrap/Resources/Public/Contrib/Bootstrap/js/bootstrap.min.js
	}
	includeJSFooter {

		t3sbjqueryeasing = EXT:t3sbootstrap/Resources/Public/Contrib/jquery.easing.min.js
		t3sbjqueryeasing.forceOnTop = 1

		codesnippet = EXT:t3sbootstrap/Resources/Public/Contrib/Codesnippet/highlight.pack.js
		codesnippet.if.isTrue = {$bootstrap.extconf.codesnippet}

		lazyload = EXT:t3sbootstrap/Resources/Public/Contrib/lazyload.min.js
		lazyload.if.isTrue = {$bootstrap.extconf.lazyLoad}

		picturefill = EXT:t3sbootstrap/Resources/Public/Contrib/picturefill.min.js
		picturefill.if.isTrue = {$bootstrap.image.picturefill}

		cookieconsentJs = EXT:t3sbootstrap/Resources/Public/Contrib/Cookieconsent/cookieconsent.min.js
		cookieconsentJs.if.isTrue = {$bootstrap.extconf.cookieconsent}

		viewportchecker = EXT:t3sbootstrap/Resources/Public/Contrib/Animate/jquery.viewportchecker.min.js
		viewportchecker.if {
			value = 2
			equals = {$bootstrap.extconf.animateCss}
		}

		t3sblightbox = EXT:t3sbootstrap/Resources/Public/Contrib/Lightbox/js/baguetteBox.js
		t3sblightbox.if {
			value = 1
			equals = {$bootstrap.config.lightboxSelection}
		}

	}

	jsInline.5 < temp.jsCookieConsent
	jsInline.5.if.isTrue = {$bootstrap.extconf.cookieconsent}


	jsFooterInline.3 = TEXT
	jsFooterInline.3.value (

new LazyLoad({
	elements_selector: ".lazy",
	threshold: {$bootstrap.image.lazyLoadThreshold},
	callback_loaded: function(img) {
		var zoomOverlay = $(img).parent().parent().find('div.zoom-overlay');
		if ( zoomOverlay.length ) {
			var imgwidth = $(img).outerWidth()+'px';
			var imgheight = $(img).height()+'px';
			if ( $(window).width() < 576 ) {
				imgwidth = '100%';
			}
			zoomOverlay.addClass('card-img-overlay');
			if ( imgwidth ) {
				zoomOverlay.css('max-width', imgwidth);
			}
			if ( imgheight ) {
				zoomOverlay.css('max-height', imgheight);
			}
		}
    }
});


	)
	jsFooterInline.3.if.isTrue = {$bootstrap.extconf.lazyLoad}

	jsFooterInline.4 = TEXT
	jsFooterInline.4.value (

hljs.initHighlightingOnLoad();


	)
	jsFooterInline.4.if.isTrue = {$bootstrap.extconf.codesnippet}

	jsFooterInline.5 < temp.jsFooterInline
	jsFooterInline.5.wrap = (function($){"use strict";|})(jQuery);

}

temp.jsCookieConsent >
temp.jsFooterInline >

# Ajax Pagination for EXT:news
[{$bootstrap.ext.news} == '1'] && [{$bootstrap.ext.typoscriptRendering} == '1']
page.includeJSFooter.ajaxPagination = EXT:t3sbootstrap/Resources/Public/Scripts/AjaxPagination.js
plugin.tx_news.settings.list.paginate.templatePath = EXT:t3sbootstrap/Resources/Private/Extensions/News/Templates/ViewHelpers/Widget/Paginate/IndexAjax.html
[END]
[{$bootstrap.ext.news} == '1'] && [{$bootstrap.ext.typoscriptRendering} == '1'] && [{$bootstrap.extconf.lazyLoad} == '1']
page.includeJSFooter.ajaxPagination = EXT:t3sbootstrap/Resources/Public/Scripts/AjaxLazyPagination.js
[END]


# 2 == ekko-lightbox - http://ashleydw.github.io/lightbox/
[{$bootstrap.config.lightboxSelection} == 2]

page.includeCSS.t3sblightbox >
page.includeCSS.t3sblightbox = EXT:t3sbootstrap/Resources/Public/Contrib/Lightbox/css/ekkoLightbox.css

page.includeJSFooter.t3sblightbox >
page.includeJSFooter.t3sblightbox = EXT:t3sbootstrap/Resources/Public/Contrib/Lightbox/js/ekkoLightbox.js

page.jsFooterInline.5.5 >
page.jsFooterInline.5.5 = TEXT
page.jsFooterInline.5.5.value (


	// lightbox - page.jsFooterInline.5.5
	$(document).on('click', '[data-toggle="lightbox"]', function(event) {
	   event.preventDefault();
	   $(this).ekkoLightbox();
	});

)
[END]

# 3 == Versatile Responsive jQuery LightBox Plugin - lightcase.js - https://cornel.bopp-art.com/lightcase/
[{$bootstrap.config.lightboxSelection} == 3]

page.includeCSS.t3sblightbox >
page.includeCSS.t3sblightbox = EXT:t3sbootstrap/Resources/Public/Contrib/Lightbox/css/lightcase.css

page.includeJSFooter.t3sblightbox >
page.includeJSFooter.t3sblightbox = EXT:t3sbootstrap/Resources/Public/Contrib/Lightbox/js/lightcase.js

page.jsFooterInline.5.5 >
page.jsFooterInline.5.5 = TEXT
page.jsFooterInline.5.5.value (


	// lightbox - page.jsFooterInline.5.5
	$('.lightcaseGallery').lightcase({
		showSequenceInfo: false,
		showCaption: true,
		maxWidth: 1140,
		maxHeight: 800
	});

)
[END]


[{$bootstrap.config.backgroundImage.enable} == 1]
# Background Image
page.cssInline {
	5 = TEXT
	5.value = body {background-repeat:no-repeat;background-position: center center;background-size: cover;background-attachment: fixed}
}
[END]

# load jquery into the header
[{$bootstrap.config.jqueryHeader} == 1]
	page.includeJSLibs {

		# JS
		jquery >
		jquery = EXT:t3sbootstrap/Resources/Public/Contrib/jquery.min.js
		jquery.forceOnTop = 1
		jquery.if.isTrue = {$bootstrap.ext.wsScss}

		# CDN
		jqueryCDN >
		jqueryCDN = https://code.jquery.com/jquery-3.4.1.slim.min.js
		jqueryCDN.external = 1
		jqueryCDN.integrity = sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n
		jqueryCDN.if.isFalse = {$bootstrap.ext.wsScss}		
		
	}
[END]
